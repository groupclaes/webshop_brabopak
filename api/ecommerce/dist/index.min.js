var d=Object.create;var c=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var C=Object.getPrototypeOf,P=Object.prototype.hasOwnProperty;var q=(t,e,r,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of h(e))!P.call(t,n)&&n!==r&&c(t,n,{get:()=>e[n],enumerable:!(o=w(e,n))||o.enumerable});return t};var a=(t,e,r)=>(r=t!=null?d(C(t)):{},q(e||!t||!t.__esModule?c(r,"default",{value:t,enumerable:!0}):r,t));var y=a(require("@groupclaes/fastify-elastic"));var l=a(require("mssql"));var f=require("mssql"),u=require("./config"),s=new Map,m={get:async t=>{if(!s.has(t)){if(!u.mssql[t])throw new Error(`Configuration for pool '${t}' does not exist!`);let e=new f.ConnectionPool(u.mssql[t]),r=e.close.bind(e);e.close=(...o)=>(s.delete(t),r(...o)),s.set(t,await e.connect())}return s.get(t)},closeAll:()=>Promise.all(Array.from(s.values()).map(t=>t.then(e=>e.close())))};var b="brabopak",i=class{constructor(){this.schema="[ecommerce]."}async getTree(e,r="nl"){try{let o=new l.default.Request(await m.get(b));o.input("user_id",l.default.Int,e),o.input("culture",l.default.VarChar,r);let n=await o.execute(this.schema+"[usp_getCategoriesTree]");return n.recordset.length>0?n.recordset[0]:void 0}catch(o){throw o}}};var p=async(t,e)=>{try{let r=new i,o=t.token||{sub:null},n=t.query.culture??"nl";return await r.getTree(o.sub,n)}catch(r){return e.status(500).send(r)}};var g=[{method:"GET",url:"/menu",handler:p}];var T=require("./config"),F=async()=>{let t=new y.default(T.wrapper);t.routeMultiple(g),await t.start()};F();
