var k=Object.create;var f=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var J=Object.getPrototypeOf,W=Object.prototype.hasOwnProperty;var A=(t,o,e,s)=>{if(o&&typeof o=="object"||typeof o=="function")for(let r of I(o))!W.call(t,r)&&r!==e&&f(t,r,{get:()=>o[r],enumerable:!(s=_(o,r))||s.enumerable});return t};var i=(t,o,e)=>(e=t!=null?k(J(t)):{},A(o||!t||!t.__esModule?f(e,"default",{value:t,enumerable:!0}):e,t));var F=i(require("@groupclaes/fastify-elastic")),x=i(require("@groupclaes/fastify-authhandler"));var y=i(require("mssql"));var h=require("mssql"),g=require("./config"),l=new Map,a={get:async t=>{if(!l.has(t)){if(!g.mssql[t])throw new Error(`Configuration for pool '${t}' does not exist!`);let o=new h.ConnectionPool(g.mssql[t]),e=o.close.bind(o);o.close=(...s)=>(l.delete(t),e(...s)),l.set(t,await o.connect())}return l.get(t)},closeAll:()=>Promise.all(Array.from(l.values()).map(t=>t.then(o=>o.close())))};var E="brabopak",d=class{constructor(){this.schema="[ecommerce]."}async getTree(o,e="nl"){try{let s=new y.default.Request(await a.get(E));s.input("user_id",y.default.Int,o),s.input("culture",y.default.VarChar,e);let r=await s.execute(this.schema+"[usp_getCategoriesTree]");return r.recordset.length>0?r.recordset[0]:void 0}catch(s){throw s}}};var b=async(t,o)=>{try{let e=new d,s=t.token||{sub:null},r=t.query.culture??"nl";return await e.getTree(s.sub,r)}catch(e){return o.status(500).send(e)}};var u=i(require("mssql"));var w="brabopak",c=class{constructor(){this.schema="[ecommerce]."}async get(o,e,s="nl"){try{let r=new u.default.Request(await a.get(w));r.input("user_id",u.default.Int,e),r.input("usercode",u.default.Int,o),r.input("culture",u.default.VarChar,s);let n=await r.execute(this.schema+"[usp_getCart]");return n.recordset.length>0?n.recordset[0]:void 0}catch(r){throw r}}async updateProduct(o,e,s,r){try{let n=new u.default.Request(await a.get(w));return n.input("user_id",u.default.Int,e),n.input("usercode",u.default.Int,o),n.input("product_id",u.default.Int,s),n.input("amount",u.default.SmallInt,r),(await n.execute(this.schema+"[usp_updateCartProduct]")).rowsAffected[0]>0}catch(n){throw n}}};var P=async(t,o)=>{try{let e=new c,s=t.token||{sub:null},r=t.query.usercode,n=t.query.culture??"nl";return await e.get(r,s.sub,n)}catch(e){return o.status(500).send(e)}},q=async(t,o)=>{try{let e=new c,s=t.token||{sub:null},r=t.query.usercode,n=t.query.culture??"nl";if(s.sub){let T=await e.updateProduct(r,s.sub,t.body.product_id,t.body.quantity)}return await e.get(r,s.sub,n)}catch(e){return o.status(500).send(e)}};var p=i(require("mssql"));var Q="brabopak",m=class{constructor(){this.schema="[ecommerce]."}async get(o,e,s="nl"){try{let r=new p.default.Request(await a.get(Q));r.input("user_id",p.default.Int,e),r.input("usercode",p.default.Int,o),r.input("culture",p.default.VarChar,s);let n=await r.execute(this.schema+"[usp_getDashboard]");return n.recordset.length>0?n.recordsets:void 0}catch(r){throw r}}};var R=async(t,o)=>{try{let e=new m,s=t.token||{sub:null},r=t.query.culture??"nl";return await e.get(t.query.usercode,s.sub,r)}catch(e){return o.status(500).send(e)}};var C=[{method:"GET",url:"/menu",handler:b},{method:"GET",url:"/carts",handler:P,requiredPermissions:[]},{method:"PUT",url:"/carts/products",handler:q,requiredPermissions:[]},{method:"GET",url:"/dashboard",handler:R,requiredPermissions:[]}];var G=require("./config"),N=async()=>{let t=new F.default(G.wrapper);t.addAuthPreHandler(x.default,"token"),t.routeMultiple(C),await t.start()};N();
