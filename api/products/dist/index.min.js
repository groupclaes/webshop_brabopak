var A=Object.create;var _=Object.defineProperty;var D=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var E=Object.getPrototypeOf,U=Object.prototype.hasOwnProperty;var N=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of T(t))!U.call(e,n)&&n!==r&&_(e,n,{get:()=>t[n],enumerable:!(o=D(t,n))||o.enumerable});return e};var b=(e,t,r)=>(r=e!=null?A(E(e)):{},N(t||!e||!e.__esModule?_(r,"default",{value:e,enumerable:!0}):r,e));var C=b(require("@groupclaes/fastify-elastic")),k=b(require("@groupclaes/fastify-authhandler"));var y=b(require("@groupclaes/oe-connector")),d=require("@groupclaes/fastify-elastic/responses");var i=b(require("mssql"));var P=require("mssql"),h=require("./config"),w=new Map,f={get:async e=>{if(!w.has(e)){if(!h.mssql[e])throw new Error(`Configuration for pool '${e}' does not exist!`);let t=new P.ConnectionPool(h.mssql[e]),r=t.close.bind(t);t.close=(...o)=>(w.delete(e),r(...o)),w.set(e,await t.connect())}return w.get(e)},closeAll:()=>Promise.all(Array.from(w.values()).map(e=>e.then(t=>t.close())))};var g="brabopak",l=class{constructor(){this.schema="[product]."}async get(t,r,o,n){let s=new i.default.Request(await f.get(g));s.input("id",i.default.Int,t),s.input("user_id",i.default.VarChar,n),s.input("usercode",i.default.Int,r),s.input("culture",i.default.VarChar,o);let u=await s.execute(this.schema+"[usp_get]");if(u.recordset.length>0)return u.recordset[0]}async getBase(t,r,o){let n=new i.default.Request(await f.get(g));n.input("id",i.default.Int,t),n.input("usercode",i.default.Int,r),n.input("culture",i.default.VarChar,o);let s=await n.execute(this.schema+"[usp_getBase]");if(s.recordset.length>0)return s.recordset[0]}async findItemNumById(t){let r=new i.default.Request(await f.get(g));r.input("id",i.default.Int,t);let o=await r.execute("findItemNumById");if(o.recordset.length>0)return o.recordset[0].itemNum}async putFavorite(t,r,o,n){let s=new i.default.Request(await f.get(g));s.input("product_id",i.default.Int,t),s.input("customer_id",i.default.Int,r),s.input("address_id",i.default.Int,o),s.input("mode",i.default.Bit,n);let u=await s.execute(this.schema+"[usp_putFavorite]");if(u.rowsAffected.length>0)return u.rowsAffected[0]>0}async putDescription(t,r,o,n){let s=new i.default.Request(await f.get(g));s.input("product_id",i.default.Int,t),s.input("customer_id",i.default.Int,r),s.input("address_id",i.default.Int,o),s.input("description",i.default.VarChar,n);let u=await s.execute(this.schema+"[usp_putDescription]");if(u.rowsAffected.length>0)return u.rowsAffected[0]>0}async deleteDescription(t,r,o){let n=new i.default.Request(await f.get(g));n.input("product_id",i.default.Int,t),n.input("customer_id",i.default.Int,r),n.input("address_id",i.default.Int,o);let s=await n.execute(this.schema+"[usp_deleteDescription]");if(s.rowsAffected.length>0)return s.rowsAffected[0]>0}async getUserSettings(t){let r=new i.default.Request(await f.get(g));r.input("usercode",i.default.Int,t);let o=await r.execute("sso.usp_getUserSettings");if(o.recordset.length>0)return o.recordset[0]}};var F=async(e,t)=>{let r=e.token;try{let o=new l,{id:n}=e.params,s=e.query.usercode,u=e.query.culture??"nl";e.log.debug({user_id:r?.sub,product_id:n,usercode:s,culture:u},"fetching product");let c=await o.findItemNumById(n);y.default.configure({c:!1,tw:1e3,simpleParameters:!0});let p=[o.get(n,s,u,r?.sub),y.default.run("getProdInfo",["BRA",0,0,[{itemNum:c}],void 0])],a=await Promise.all(p),m={product:a[0]};return m.product===null?(0,d.fail)(t,{id:"not found or no permission"},404):m.product.error?(0,d.error)(t,m.product.error):(a[1]&&a[1].status===200&&m.product&&(m.product.stock=a[1].result.stock,m.product.available_on=a[1].result.availableOn,m.product.in_backorder=a[1].result.inBackorder),e.log.info({product_id:n,usercode:s,culture:u},"Get product details"),(0,d.success)(t,m))}catch(o){return e.log.error({user_id:r?.sub,err:o},"failed to get product information"),(0,d.error)(t,"failed to get product information")}},I=async(e,t)=>{let r=e.token;try{let o=new l,n=e.params.id,s=e.query.usercode,u=e.query.culture??"nl";e.log.debug({user_id:r?.sub,product_id:n,usercode:s,culture:u},"fetching product base");let c={product:await o.getBase(n,s,u)};return c.product===null?(0,d.fail)(t,{id:"not found or no permission"},404):c.product.error?(0,d.error)(t,c.product.error):(0,d.success)(t,c)}catch(o){return e.log.error({user_id:r?.sub,err:o},"failed to get base product information"),(0,d.error)(t,"failed to get base product information")}},R=async(e,t)=>{let r=e.token;try{let o=new l,n=e.params.id,s=+e.query.usercode,u=e.query.mode,c=await o.getBase(n,s,"nl"),p=await o.getUserSettings(s);if(c&&p){y.default.configure({c:!1,tw:-1,simpleParameters:!0});let a=await y.default.run("putFavorite",["BRA",{favorites:[{usercode:s,customer_id:p.customer_id,address_id:p.address_id,itemnum:c.itemnum,unit_code:c.unit_code,mode:u}]},void 0]);return e.log.info({order_id:e.params.id,customer_id:p.customer_id,address_id:p.address_id,customer:p},"Put favorite"),a&&a.status===200?(await o.putFavorite(n,p.customer_id,p.address_id,u),(0,d.success)(t,a.result,a.status)):(0,d.fail)(t,a.result,a.status)}}catch(o){return e.log.error({user_id:r.sub,err:o},"failed to update product favorite"),(0,d.error)(t,"failed to update product favorite status")}},v=async(e,t)=>{try{let r=new l,o=e.params.id,n=+e.query.usercode,s=await r.getBase(o,n,"nl"),u=await r.getUserSettings(n);if(s&&u){let c=await r.putDescription(o,u.customer_id,u.address_id,e.body.description);return c?(0,d.success)(t,{success:c}):(e.log.warn("Failed to update database record"),(0,d.fail)(t,{success:c,reason:"Failed to update database record"}))}return e.log.error({product_id:o,usercode:n},"product or customer not found"),(0,d.error)(t,"product or customer not found",404)}catch(r){return e.log.error({err:r},"failed to update product description"),(0,d.error)(t,"failed to update product description")}},B=async(e,t)=>{try{let r=new l,o=e.params.id,n=+e.query.usercode,s=await r.getBase(o,n,"nl"),u=await r.getUserSettings(n);if(s&&u){let c=await r.deleteDescription(o,u.customer_id,u.address_id);return c?(0,d.success)(t,{success:c}):(e.log.warn("Failed to remove database record"),(0,d.fail)(t,{success:c,reason:"Failed to remove database record"}))}return e.log.error({product_id:o,usercode:n},"product or customer not found"),(0,d.error)(t,"product or customer not found",404)}catch(r){return e.log.error({err:r},"failed to remove product description"),(0,d.error)(t,"failed to remove product description")}};var x=[{method:"GET",url:"/:id",handler:F,requiredPermissions:[]},{method:"GET",url:"/:id/base",handler:I,requiredPermissions:[]},{method:"PUT",url:"/:id/favorite",handler:R,requiredPermissions:[void 0]},{method:"PUT",url:"/:id/description",handler:v,requiredPermissions:[void 0]},{method:"DELETE",url:"/:id/description",handler:B,requiredPermissions:[void 0]}];(async()=>{let e=new C.default(require("./config").wrapper);e.addAuthPreHandler(k.default,"token"),e.routeMultiple(x),await e.start()})();
