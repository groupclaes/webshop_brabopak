var B=Object.create;var g=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var R=Object.getPrototypeOf,F=Object.prototype.hasOwnProperty;var v=(e,r,t,o)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of x(r))!F.call(e,n)&&n!==t&&g(e,n,{get:()=>r[n],enumerable:!(o=I(r,n))||o.enumerable});return e};var f=(e,r,t)=>(t=e!=null?B(R(e)):{},v(r||!e||!e.__esModule?g(t,"default",{value:e,enumerable:!0}):t,e));var q=f(require("@groupclaes/fastify-elastic")),C=f(require("@groupclaes/fastify-authhandler"));var u=f(require("mssql"));var h=require("mssql"),y=require("./config"),l=new Map,p={get:async e=>{if(!l.has(e)){if(!y.mssql[e])throw new Error(`Configuration for pool '${e}' does not exist!`);let r=new h.ConnectionPool(y.mssql[e]),t=r.close.bind(r);r.close=(...o)=>(l.delete(e),t(...o)),l.set(e,await r.connect())}return l.get(e)},closeAll:()=>Promise.all(Array.from(l.values()).map(e=>e.then(r=>r.close())))};var m="brabopak",d=class{constructor(){this.schema="[product]."}async get(r,t,o,n){try{let s=new u.default.Request(await p.get(m));s.input("id",u.default.Int,r),s.input("user_id",u.default.VarChar,n),s.input("usercode",u.default.Int,t),s.input("culture",u.default.VarChar,o);let c=await s.execute(this.schema+"[usp_get]");return c.recordset.length>0?c.recordset[0]:void 0}catch(s){throw s}}async getBase(r,t,o){try{let n=new u.default.Request(await p.get(m));n.input("id",u.default.Int,r),n.input("usercode",u.default.Int,t),n.input("culture",u.default.VarChar,o);let s=await n.execute(this.schema+"[usp_getBase]");return s.recordset.length>0?s.recordset[0]:void 0}catch(n){throw n}}async findItemNumById(r){try{let t=new u.default.Request(await p.get(m));t.input("id",u.default.Int,r);let o=await t.execute("findItemNumById");return o.recordset.length>0?o.recordset[0].itemNum:void 0}catch(t){throw t}}};var w=async(e,r)=>{try{let t=new d,o=e.token||{sub:null},{id:n}=e.params,s=e.query.usercode,c=e.query.culture??"nl",i,a={product:await t.get(n,s,c,o.sub)};if(a.product===null){r.status(401).send({verified:!1,error:"Wrong credentials"});return}if(a.product.error){r.status(404).send({error:a.product.error});return}i&&a.product&&(a.product.stock=i!==void 0?i.stock:-1,a.product.availableOn=i!==void 0?i.availableOn:null,a.product.inBackorder=i!==void 0?i.inBackorder:!1);let k=i!==void 0?i.stock:-1;return e.log.info({productId:n,usercode:s,stock:k,culture:c},"Get product details"),a}catch(t){return r.status(500).send(t)}},b=async(e,r)=>{try{let t=new d,o=e.params.id,n=e.query.usercode,s=e.query.culture??"nl",c={product:await t.getBase(o,n,s)};if(c.product===null){r.status(401).send({verified:!1,error:"Wrong credentials"});return}return c}catch(t){return r.status(500).send(t)}};var P=[{method:"GET",url:"/:id",handler:w,requiredPermissions:[]},{method:"GET",url:"/:id/base",handler:b,requiredPermissions:[]}];var E=require("./config"),N=async()=>{let e=new q.default(E.wrapper);e.addAuthPreHandler(C.default,"token"),e.routeMultiple(P),await e.start()};N();
